<?php

/**
 * Implements hook_block_info(). Describe the blocks implemented by this module.
 */
function consume_simple_block_info() {
  $blocks['show_consumed_data'] = array(
    'info' => t('Listing of remote data'),
    'status' => TRUE,
    'region' => 'sidebar_first',
    'weight' => 0,
    'visibility' => 1,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure(). Display a form to capture the block settings.
 */
function consume_simple_block_configure($delta) {
  $form = array();
  switch ($delta) {
    case 'show_consumed_data':
      $form['consume_simple_service_servername'] = array(
        '#type' => 'textfield',
        '#title' => t('Configure the source of the data.'),
        '#size' => 30,
        '#description' => t('Provide the address of the webservice where the service is located.'),
        '#default_value' => variable_get('consume_simple_service_servername', 'http://sitea.dev'),
      );

      $form['consume_simple_service_user_name'] = array(
        '#type' => 'textfield',
        '#title' => t('User name'),
        '#size' => 30,
        '#description' => t('Provide the user name to use for authentication.'),
        '#default_value' => variable_get('consume_simple_service_user_name', 'admin'),
      );

      $form['consume_simple_service_user_pass'] = array(
        '#type' => 'password',
        '#title' => t('User password'),
        '#size' => 30,
        '#description' => t('Provide the user password to use for authentication.'),
        '#default_value' => variable_get('consume_simple_service_user_pass', 'admin'),
      );

      break;
  }
  return $form;
}

/**
 * Implements hook_block_save(). Save all the configuration as drupal variables.
 */
function consume_simple_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'show_consumed_data':
      variable_set('consume_simple_service_servername', $edit['consume_simple_service_servername']);
      variable_set('consume_simple_service_user_name', $edit['consume_simple_service_user_name']);
      variable_set('consume_simple_service_user_pass', $edit['consume_simple_service_user_pass']);
      break;
  }
  return;
}

/**
 * Implements hook_block_view().
 */
function consume_simple_block_view($delta = '') {
  switch ($delta) {
    case 'show_consumed_data':
      $block['subject'] = t('Simple items');
      $block['content'] = consume_simple_block_contents($delta);
      return $block;
      break;
  }
}

/**
 * Function to define the block contnet 
 */
function consume_simple_block_contents($delta) {
  switch ($delta) {
    case 'show_consumed_data':
      //Authenticate
      $base_url = variable_get('consume_simple_service_servername') . '/simple_endpoint';
      $data = array(
        'username' => 'admin',
        'password' => 'admin',
      );
      $data = http_build_query($data, '', '&');
      $options = array(
        'headers' => array(
          'Accept' => 'application/json',
        ),
        'method' => 'POST',
        'data' => $data
      );

      $response = drupal_http_request($base_url . '/user/login', $options);
      $data = json_decode($response->data);

      // Check if login was successful
      if ($response->code == 200) {
        // Now recycle the login cookie we recieved in the first request
        $options['headers']['Cookie'] = $data->session_name . '=' . $data->sessid;

        // Get info about a user
        $data = array();
        $options['data'] = http_build_query($data, '', '&');
        $options['method'] = 'GET';
        $response = drupal_http_request($base_url . '/simple_listing', $options);
      }
      //get the list, store them in $items
      $data = json_decode($response->data);
      //return array('#markup' => print_r($data,true));
      return array('#markup' => theme('consume_simple_output', array('data' => $data)));
      return array('#markup' => theme('item_list', array('items' => $items)));

      break;
  }
}

/**
 * Implements hook_theme().
 */
function consume_simple_theme() {
  return array(
    'consume_simple_output' => array(
      'variables' => array('data' => NULL),
    ),
  );
}

/**
 * Theme the default output. 
 */
function theme_consume_simple_output($variables) {
  $data = $variables['data'];
  $output = "";
  foreach ($data as $item) {
    $output .= "$item->field_imagef <span>$item->field_description</span>";
  }
  return $output;
}
